/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements. See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

title = "Apache FreeMarker Test Utiltities"
description = """\
FreeMarker template engine, testing utilities for internal use; this is not a published module."""
published = false

dependencies {
    compile project(":freemarker-core")

    compile "junit:junit:4.12"
    compile "org.hamcrest:hamcrest-library:1.3"
    compile libraries.commonsIo
    compile libraries.commonsLang
    compile libraries.commonsCollections
    compile libraries.guava
    compile libraries.findbugs

    // Logging during testing:
    runtime "ch.qos.logback:logback-classic:1.1.8"
    runtime "org.codehaus.janino:janino:3.0.6"
    runtime "org.slf4j:jcl-over-slf4j:$slf4jVersion"
    runtime "org.apache.logging.log4j:log4j-to-slf4j:2.8.2"
}

jar {
    manifest {
        // This is needed for "a.class.from.another.Bundle"?new() to work.
        instructionReplace 'DynamicImport-Package', '*'
        attributes(
                "Extension-name": "${project.group}:${project.name}",
                "Specification-Title": project.title,
                "Implementation-Title": project.title
        )
    }
}

javadoc {
    title "${project.title} ${versionCanonical} API"
}

// The identical parts of Maven "deployer" and "installer" configurations:
def mavenCommons = { callerDelegate ->
    delegate = callerDelegate

    pom.project {
        description project.description
    }
}

// Not a published module
uploadArchives.enabled = false

install {
    repositories {
        mavenInstaller {
            mavenCommons(delegate)
        }
    }
}
